/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.uam.jokenpo_sd_aps;

import javax.swing.JButton;
import javax.swing.JLabel;
import java.util.Random;
import java.awt.Color;
import java.awt.Component;
import java.io.IOException;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author root
 */
public class JokenpoUI extends javax.swing.JFrame {
    Jokenpo jokenpo;
    Player player = new Player();
    Boolean isServer;
    GameServer gameServer;
    GameClient gameClient;
    
    public enum Choice  {
        PEDRA(1), PAPEL(2), TESOURA(3);
        public int choice;
        
        Choice(int valor) {
            choice = valor;
        }
    }
    
    public enum Result  {
        VITORIA(1), DERROTA(2), EMPATE(3);
        public int result;
        
        Result(int valor) {
            result = valor;
        }
    }
    
    /**
     * Creates new form JokenpoUI
     */
    public JokenpoUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        papelBtn = new javax.swing.JButton();
        tesouraBtn = new javax.swing.JButton();
        pedraBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        vitoriaNum = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        derrotaNum = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        empateNum = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        oponenteTipo = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        escolhaTipo = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        status = new javax.swing.JLabel();
        botaoCpu = new javax.swing.JButton();
        botaoMp = new javax.swing.JButton();
        battleOutcomeText = new javax.swing.JLabel();
        battleStatus = new javax.swing.JLabel();
        ipField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        howToPlay = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        devInfo = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Jokenpo");
        setPreferredSize(new java.awt.Dimension(600, 600));
        setResizable(false);

        papelBtn.setText("PAPEL");
        papelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                papelBtnMouseClicked(evt);
            }
        });
        papelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                papelBtnActionPerformed(evt);
            }
        });

        tesouraBtn.setText("TESOURA");
        tesouraBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tesouraBtnMouseClicked(evt);
            }
        });
        tesouraBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tesouraBtnActionPerformed(evt);
            }
        });

        pedraBtn.setText("PEDRA");
        pedraBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pedraBtnMouseClicked(evt);
            }
        });
        pedraBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pedraBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Vitórias : ");

        vitoriaNum.setText("-");

        jLabel3.setText("Derrotas : ");

        derrotaNum.setText("-");

        jLabel5.setText("Empates : ");

        empateNum.setText("-");

        jLabel7.setText("Oponente : ");

        oponenteTipo.setText("-");

        jLabel9.setText("Sua escolha : ");

        escolhaTipo.setText("-");

        jLabel11.setText("Status : ");

        status.setText("-");

        botaoCpu.setText("JOGAR VS CPU");
        botaoCpu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botaoCpuMouseClicked(evt);
            }
        });
        botaoCpu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCpuActionPerformed(evt);
            }
        });

        botaoMp.setText("JOGAR VS PLAYER");
        botaoMp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botaoMpMouseClicked(evt);
            }
        });
        botaoMp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoMpActionPerformed(evt);
            }
        });

        battleOutcomeText.setText("-");

        battleStatus.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        battleStatus.setText("-");

        ipField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("IP:");

        jMenu1.setText("Ajuda");

        howToPlay.setText("Como Jogar");
        howToPlay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                howToPlayMouseClicked(evt);
            }
        });
        howToPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                howToPlayActionPerformed(evt);
            }
        });
        jMenu1.add(howToPlay);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Créditos");

        devInfo.setText("Desenvolvedores");
        devInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                devInfoMouseClicked(evt);
            }
        });
        jMenu2.add(devInfo);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tesouraBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                    .addComponent(papelBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pedraBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(oponenteTipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(escolhaTipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ipField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(107, 107, 107)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(vitoriaNum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(derrotaNum, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(empateNum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(botaoMp, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                            .addComponent(botaoCpu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(battleOutcomeText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(battleStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(status, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pedraBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(papelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tesouraBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(oponenteTipo)
                    .addComponent(jLabel1)
                    .addComponent(vitoriaNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(escolhaTipo)
                    .addComponent(jLabel3)
                    .addComponent(derrotaNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ipField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(empateNum)))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(status)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(battleOutcomeText, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(battleStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botaoCpu, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botaoMp, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void papelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_papelBtnActionPerformed
        this.escolhaTipo.setText("PAPEL");
        int choice = 2;
        
        if(this.oponenteTipo.getText() == "CPU"){
            int cpuChoice = this.getRandomChoice().choice;
            this.jokenpoLogic(choice, cpuChoice);
        }else{
            if(isServer){
                this.status.setText("Esperando jogada do client...");
                this.serverHandling(choice);
            }else{
                this.status.setText("Esperando jogada do servidor...");
                this.clientHandling(choice);
            }
        }
    }//GEN-LAST:event_papelBtnActionPerformed

    private void tesouraBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tesouraBtnActionPerformed
        this.escolhaTipo.setText("TESOURA");
        int choice = 3;
       
        if(this.oponenteTipo.getText() == "CPU"){
            int cpuChoice = this.getRandomChoice().choice;
            this.jokenpoLogic(choice, cpuChoice);
        }else{
            if(isServer){
                this.serverHandling(choice);
            }else{
                this.clientHandling(choice);
            }
        }
    }//GEN-LAST:event_tesouraBtnActionPerformed

    private void pedraBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pedraBtnActionPerformed
        this.escolhaTipo.setText("PEDRA");
        int choice = 1;
        
        if(this.oponenteTipo.getText() == "CPU"){
            int cpuChoice = this.getRandomChoice().choice;
            this.jokenpoLogic(choice, cpuChoice);
        }else{
            if(isServer){
                this.serverHandling(choice);
            }else{
                this.clientHandling(choice);
            }
        }
    }//GEN-LAST:event_pedraBtnActionPerformed

    private void botaoCpuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCpuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botaoCpuActionPerformed

    private void botaoMpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoMpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botaoMpActionPerformed

    private void botaoCpuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoCpuMouseClicked
        this.startCpuGame();
    }//GEN-LAST:event_botaoCpuMouseClicked

    private void pedraBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pedraBtnMouseClicked
    }//GEN-LAST:event_pedraBtnMouseClicked

    private void papelBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_papelBtnMouseClicked
    }//GEN-LAST:event_papelBtnMouseClicked

    private void tesouraBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tesouraBtnMouseClicked
    }//GEN-LAST:event_tesouraBtnMouseClicked

    private void ipFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ipFieldActionPerformed

    private void botaoMpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoMpMouseClicked
        this.startMultiplayerGame();
    }//GEN-LAST:event_botaoMpMouseClicked

    private void howToPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_howToPlayActionPerformed
    }//GEN-LAST:event_howToPlayActionPerformed

    private void howToPlayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_howToPlayMouseClicked
        JOptionPane.showMessageDialog(null, "VS PLAYER: \n - Host: Clique em JOGAR CONTRA PLAYER e espere pelo Client"
                + " \n - Client: insira o IP do host (porta 9876), espere a conexão ser estabelecida e jogue"
                + "\n VS CPU: Apenas selecione a opção e jogue","Como Jogar", JOptionPane.INFORMATION_MESSAGE);
        // TODO add your handling code here:
    }//GEN-LAST:event_howToPlayMouseClicked

    private void devInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_devInfoMouseClicked
        JOptionPane.showMessageDialog(null, "APS Sistemas Distribuídos - Jokenpo","Créditos", JOptionPane.INFORMATION_MESSAGE);
        // TODO add your handling code here:
    }//GEN-LAST:event_devInfoMouseClicked

    private void startCpuGame(){
        this.setTitle("Jokenpo - vs CPU");
        this.resetPlayer();
        this.updateUiStatistics();
        this.enableGame();
        this.oponenteTipo.setText("CPU");
    }
    
    private void startMultiplayerGame(){
        this.resetPlayer();
        this.updateUiStatistics();
        this.enableGame();
        this.oponenteTipo.setText("PLAYER");
        
        if(this.ipField.getText().isEmpty()){
            this.setTitle("Jokenpo - [Hosting...] ");
            this.updateUiStatistics();
            this.status.setText("Iniciando game como servidor...");
            this.isServer = true;
        }else{
            this.setTitle("Jokenpo - [Client...] ");
            this.updateUiStatistics();
            this.status.setText("Iniciando game como cliente...");
            this.isServer = false;
        }
        
    }
    
    public Choice getRandomChoice() {
        Random random = new Random();
        return Choice.values()[random.nextInt(Choice.values().length)];
    } 
    
    public void updateUiStatistics(){
        this.vitoriaNum.setText(Integer.toString(player.getVitorias()));
        this.derrotaNum.setText(Integer.toString(player.getDerrotas()));
        this.empateNum.setText(Integer.toString(player.getEmpates()));       
    }
    
    public void resetPlayer(){
        this.player = new Player();
    }
    
    public void enableGame(){
        this.getPedraBtn().setEnabled(true);
        this.getTesouraBtn().setEnabled(true);
        this.getPapelBtn().setEnabled(true);
    }
    
    public void battleResult(String enemyChoice, int result){
//        VITORIA(1), DERROTA(2), EMPATE(3);
        switch(result){
            case 1:
                this.battleOutcomeText.setText("Seu oponente escolheu " + enemyChoice + "!");
                this.battleStatus.setForeground(Color.BLUE);
                this.battleStatus.setText("VITÓRIA!");
                break;
            case 2:                
                this.battleOutcomeText.setText("Seu oponente escolheu " + enemyChoice + "!");
                this.battleStatus.setForeground(Color.RED);
                this.battleStatus.setText("DERROTA!");
                break;
            case 3:                
                this.battleOutcomeText.setText("Seu oponente escolheu " + enemyChoice + "!");
                this.battleStatus.setForeground(Color.GRAY);
                this.battleStatus.setText("EMPATE!");
                break;
            default:                               
                this.updateUiStatistics();
                this.status.setText("ERRO!");
                this.battleStatus.setText("ERRO!");
                break;
        }
        this.updateUiStatistics();
    }
    
    public void clientHandling(int choice){
        try {
            this.gameClient = new GameClient(this.ipField.getText());
        } catch (UnknownHostException ex) {
            this.status.setText(ex.toString());
        }
        try {
            int opChoice = this.gameClient.clientCommunication(choice);
            this.jokenpoLogic(choice, opChoice);
        } catch (IOException ex) {
            this.status.setText(ex.toString());
        } catch (ClassNotFoundException ex) {
            this.status.setText(ex.toString());
        } catch (InterruptedException ex) {
            this.status.setText(ex.toString());
        }
    }
    
    public void serverHandling(int choice){
        this.gameServer = new GameServer();
        this.status.setText(this.gameServer.status);
        try {
            int opChoice = this.gameServer.serverCommunication(choice);
            this.jokenpoLogic(choice, opChoice);
        } catch (IOException ex) {
            this.status.setText(ex.toString());
        } catch (ClassNotFoundException ex) {            
            this.status.setText(ex.toString());
        }
    }
    
    public void jokenpoLogic(int yourChoice, int opChoice){
//        PEDRA(1), PAPEL(2), TESOURA(3);
            if(yourChoice == 1){
                switch(opChoice){
                    
                case 1:
                    this.player.setEmpates(player.getEmpates() + 1);
                    this.battleResult("PEDRA", 3);
                    break;
                case 2:
                    this.player.setDerrotas(player.getDerrotas() + 1);
                    this.battleResult("PAPEL", 2);
                    break;
                case 3:
                    this.player.setVitorias(player.getVitorias() + 1);
                    this.battleResult("TESOURA", 1);
                    break;
                default:
                    this.updateUiStatistics();
                    this.status.setText("ERRO!");
                }
            }else if(yourChoice == 2){
                switch(opChoice){
                case 1:
                    this.player.setVitorias(player.getVitorias() + 1);
                    this.battleResult("PEDRA", 1);
                    break;
                case 2:
                    this.player.setEmpates(player.getEmpates() + 1);
                    this.battleResult("PAPEL", 3);
                    break;
                case 3:
                    this.player.setDerrotas(player.getDerrotas() + 1);
                    this.battleResult("TESOURA", 2);
                    break;
                default:
                    this.updateUiStatistics();
                    this.status.setText("ERRO!");
                }
            }else if(yourChoice == 3){
                switch(opChoice){
                    
                case 1:
                    this.player.setDerrotas(player.getDerrotas() + 1);
                    this.battleResult("PEDRA", 2);
                    break;
                case 2:
                    this.player.setVitorias(player.getVitorias() + 1);
                    this.battleResult("PAPEL", 1);
                    break;
                case 3:
                    this.player.setEmpates(player.getEmpates() + 1);
                    this.battleResult("TESOURA", 3);
                    break;
                default:
                    this.updateUiStatistics();
                    this.status.setText("ERRO!");
                }
            }
    }
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JokenpoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JokenpoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JokenpoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JokenpoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() { 
                Jokenpo jokenpo = new Jokenpo(new JokenpoUI());
                jokenpo.getManageJokenpo().setVisible(true);
            }
        });
    }

    public JButton getBotaoCpu() {
        return botaoCpu;
    }

    public void setBotaoCpu(JButton botaoCpu) {
        this.botaoCpu = botaoCpu;
    }

    public JButton getBotaoMp() {
        return botaoMp;
    }

    public void setBotaoMp(JButton botaoMp) {
        this.botaoMp = botaoMp;
    }

    public JLabel getDerrotaNum() {
        return derrotaNum;
    }

    public void setDerrotaNum(JLabel derrotaNum) {
        this.derrotaNum = derrotaNum;
    }

    public JLabel getEmpateNum() {
        return empateNum;
    }

    public void setEmpateNum(JLabel empateNum) {
        this.empateNum = empateNum;
    }

    public JLabel getEscolhaTipo() {
        return escolhaTipo;
    }

    public void setEscolhaTipo(JLabel escolhaTipo) {
        this.escolhaTipo = escolhaTipo;
    }

    public JLabel getOponenteTipo() {
        return oponenteTipo;
    }

    public void setOponenteTipo(JLabel oponenteTipo) {
        this.oponenteTipo = oponenteTipo;
    }

    public JButton getPapelBtn() {
        return papelBtn;
    }

    public void setPapelBtn(JButton papelBtn) {
        this.papelBtn = papelBtn;
    }

    public JButton getPedraBtn() {
        return pedraBtn;
    }

    public void setPedraBtn(JButton pedraBtn) {
        this.pedraBtn = pedraBtn;
    }

    public JLabel getStatus() {
        return status;
    }

    public void setStatus(JLabel status) {
        this.status = status;
    }

    public JButton getTesouraBtn() {
        return tesouraBtn;
    }

    public void setTesouraBtn(JButton tesouraBtn) {
        this.tesouraBtn = tesouraBtn;
    }

    public JLabel getVitoriaNum() {
        return vitoriaNum;
    }

    public void setVitoriaNum(JLabel vitoriaNum) {
        this.vitoriaNum = vitoriaNum;
    }

    private void setVitorias(String vitorias){
        this.vitoriaNum.setText(vitorias);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel battleOutcomeText;
    private javax.swing.JLabel battleStatus;
    private javax.swing.JButton botaoCpu;
    private javax.swing.JButton botaoMp;
    private javax.swing.JLabel derrotaNum;
    private javax.swing.JMenu devInfo;
    private javax.swing.JLabel empateNum;
    private javax.swing.JLabel escolhaTipo;
    private javax.swing.JMenu howToPlay;
    private javax.swing.JTextField ipField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel oponenteTipo;
    private javax.swing.JButton papelBtn;
    private javax.swing.JButton pedraBtn;
    private javax.swing.JLabel status;
    private javax.swing.JButton tesouraBtn;
    private javax.swing.JLabel vitoriaNum;
    // End of variables declaration//GEN-END:variables
}
